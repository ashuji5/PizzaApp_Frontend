[{"E:\\Project1\\pizza-app\\Client\\src\\index.js":"1","E:\\Project1\\pizza-app\\Client\\src\\App.js":"2","E:\\Project1\\pizza-app\\Client\\src\\redux\\rootReducer.js":"3","E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\Order.js":"4","E:\\Project1\\pizza-app\\Client\\src\\Components\\Navbar\\Navbar.js":"5","E:\\Project1\\pizza-app\\Client\\src\\Components\\Menu\\Menu.js":"6","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productreducer.js":"7","E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\Cart.js":"8","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\actiontypes.js":"9","E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Products.js":"10","E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\CartItem.js":"11","E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Product.js":"12","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productaction.js":"13","E:\\Project1\\pizza-app\\Client\\src\\Components\\Register\\Register.js":"14","E:\\Project1\\pizza-app\\Client\\src\\Components\\Login\\Login.js":"15","E:\\Project1\\pizza-app\\Client\\src\\api\\index.js":"16","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\cartreducer.js":"17","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authreducer.js":"18","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authaction.js":"19"},{"size":534,"mtime":1618226628693,"results":"20","hashOfConfig":"21"},{"size":1369,"mtime":1618660868528,"results":"22","hashOfConfig":"21"},{"size":321,"mtime":1619179205950,"results":"23","hashOfConfig":"21"},{"size":167,"mtime":1614863462007,"results":"24","hashOfConfig":"21"},{"size":5402,"mtime":1619437268396,"results":"25","hashOfConfig":"21"},{"size":3502,"mtime":1615380057846,"results":"26","hashOfConfig":"21"},{"size":5542,"mtime":1618660753137,"results":"27","hashOfConfig":"21"},{"size":3423,"mtime":1618660050589,"results":"28","hashOfConfig":"21"},{"size":672,"mtime":1618925136694,"results":"29","hashOfConfig":"21"},{"size":902,"mtime":1618316501058,"results":"30","hashOfConfig":"21"},{"size":2462,"mtime":1618660611342,"results":"31","hashOfConfig":"21"},{"size":2185,"mtime":1618660868528,"results":"32","hashOfConfig":"21"},{"size":2300,"mtime":1618660548246,"results":"33","hashOfConfig":"21"},{"size":4004,"mtime":1619179206043,"results":"34","hashOfConfig":"21"},{"size":3465,"mtime":1619179944472,"results":"35","hashOfConfig":"21"},{"size":291,"mtime":1619179205950,"results":"36","hashOfConfig":"21"},{"size":2929,"mtime":1618659764767,"results":"37","hashOfConfig":"21"},{"size":527,"mtime":1619179205949,"results":"38","hashOfConfig":"21"},{"size":625,"mtime":1619179205949,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1bfjsrx",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\Project1\\pizza-app\\Client\\src\\index.js",[],["84","85"],"E:\\Project1\\pizza-app\\Client\\src\\App.js",["86","87"],"import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getProducts} from './redux/Shopping/productaction';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Redirect, Route}  from 'react-router-dom';\nimport Menu from './Components/Menu/Menu';\nimport Order from './Components/Order/Order';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Register/Register';\n\nimport Cart from './Components/Cart/Cart';\nimport Navbar from './Components/Navbar/Navbar';\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n\n  const productsData = useSelector(state => state.productreducer)\n  const{products, loading, error} = productsData;\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  if(loading == true){\n    return(\n      <>\n      <h2>Loading</h2>\n      </>\n    )\n  }\n\n  else if(error){\n    return(\n      <h2>{error}</h2>\n    )\n  }\n\n\n\n  else{\n  return(\n    <>\n\n  \n   \n   <BrowserRouter>\n   <div>\n   <Navbar/>\n   <Route exact path =\"/\" component={Menu}/>\n   <Route  path =\"/orders\" component = {Order}/>\n   <Route path =\"/cart\" component ={Cart}/>\n   <Route path =\"/login\" component ={Login}/>\n   <Route path =\"/register\" component ={Register}/>   \n   <Redirect to =\"/\"/>\n   </div>\n   </BrowserRouter>\n   </>\n  )\n  }\n\n}\n\n\n\nexport default App;\n","E:\\Project1\\pizza-app\\Client\\src\\redux\\rootReducer.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\Order.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Navbar\\Navbar.js",["88","89"],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Menu\\Menu.js",[],"E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productreducer.js",["90","91","92","93","94"],"\r\nimport * as actiontypes from './actiontypes';\r\n\r\nconst inState = {\r\n    products: [ \r\n        //{\r\n        \r\n        //     heading: 'Pepperoni',\r\n        //     img: web,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '12.99'\r\n        // },\r\n\r\n        // {\r\n        //     id: '2',\r\n        //     heading: 'Mexican',\r\n        //     img: mexican,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '22.99'\r\n        // },\r\n\r\n        // {\r\n        //     id: '3',\r\n        //     heading: 'Chicken ZINGER',\r\n        //     img: chicken,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '28.99'\r\n        // },\r\n\r\n        // {\r\n        //     id: '4',\r\n        //     heading: 'Cheese',\r\n        //     img: cheese,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '15.99'\r\n        // },\r\n\r\n        // {\r\n        //     id: '5',\r\n        //     heading: 'Vegetarian',\r\n        //     img: vegetarian,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '12.99'\r\n        // },\r\n\r\n        // {\r\n        //     id: '6',\r\n        //     heading: 'Pepperoni',\r\n        //     img: web,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '12.99'\r\n        // },\r\n\r\n        // {\r\n        //     id: '7',\r\n        //     heading: 'Mexican',\r\n        //     img: mexican,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '12.99'\r\n        // },\r\n\r\n        // {\r\n        //     id: '8',\r\n        //     heading: 'Cheese',\r\n        //     img: cheese,\r\n        //     desc: 'Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc',\r\n        //     price: '12.99'\r\n        // }\r\n    ],\r\n    \r\n    loading : true,\r\n    error : \" \",\r\n    product : [],\r\n    cart : [],\r\n    currentItem: null,\r\n}\r\n\r\nconst productreducer = (state =inState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actiontypes.GET_PRODUCTS_REQUEST:\r\n            return{\r\n                loading : true,\r\n                products : []\r\n            }\r\n\r\n        case actiontypes.GET_PRODUCTS_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                products : action.payload\r\n            }\r\n            \r\n        case actiontypes.GET_PRODUCTS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error : action.payload\r\n            }\r\n            \r\n        case actiontypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n            \r\n        case actiontypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n            \r\n        case actiontypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            } \r\n            \r\n        // case actiontypes.ADDING_CART:\r\n        //     return{\r\n        //         loading : false,\r\n        //     }    \r\n\r\n        // case actiontypes.ADD_TO_CART:\r\n        //     //find that product\r\n        //     //if(state.loading === false){\r\n        //     const item = state.products.find((x) => x.id === action.payload.id);\r\n        //     //chech that product is already present in the cart or not\r\n            \r\n            \r\n        //     const inCart = state.cart.find((item) => \r\n        //         item._id === action.payload.id ? true : false\r\n        //     );\r\n        //     return {\r\n        //         // First we are checking that if item id present in the cart that we are updating the quantity otherwise we are taking the quantity as 1\r\n        //         ...state,\r\n        //         cart: inCart\r\n        //           ? state.cart.map((item) =>\r\n        //               item._id === action.payload.id\r\n        //                 ? { ...item, qty: item.qty + 1 }\r\n        //                 : item\r\n        //             )\r\n        //           : [...state.cart, { ...item, qty: 1 }],\r\n        //     };\r\n         \r\n\r\n        // case actiontypes.ADJUST_QTY:\r\n        //     return {\r\n        //         ...state,\r\n        //         cart : state.cart.map((item) => \r\n        //             item._id === action.payload.id ? {...item, qty : +action.payload.qty} : item\r\n        //         )\r\n        //     };\r\n\r\n        // case actiontypes.REMOVE:\r\n        //     return {\r\n        //         ...state,\r\n        //         cart : state.cart.filter((item) => \r\n        //             item._id != action.payload.id\r\n        //         )\r\n        //     };\r\n\r\n        // case actiontypes.LOAD_CURRENT_ITEM:\r\n        //     return {\r\n        //         ...state,\r\n        //         currentItem : action.payload\r\n        //     };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productreducer ;","E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\Cart.js",["95","96"],"import React from 'react'\r\nimport './Cart.css';\r\nimport emptyCart from '../image/empty-cart.png';\r\nimport CartItem from './CartItem';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Cart() {\r\n\r\n    const cart = useSelector(state => state.cartreducer.cart);\r\n    var totalPrice = 0;\r\n\r\n    console.log(cart);\r\n\r\n    cart.map(item => {\r\n        totalPrice = totalPrice + parseFloat(item.price);\r\n    })\r\n\r\n \r\n\r\n    console.log(totalPrice);\r\n\r\n    if (cart.length == 0) {\r\n        return (\r\n            <>\r\n                <div className=\" empty-page \">\r\n                    <div className=\" empty-cart\">\r\n                        <div className=\"empty-text\">\r\n                            <h2> Cart is empty... 🙁</h2>\r\n                            <div className=\"cart-text\">\r\n                                <p>You probably haven't added anything to the cart yet. To Order a pizza, go to the menu page</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"empty-img\">\r\n                            <img className=\"img-fluid\" src={emptyCart} alt={emptyCart} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n\r\n                <div className=\"cart-page\">\r\n                    <div className=\"container \">\r\n                        <div className=\"order-heading text-center mb-10\">\r\n                            <i class=\"fas fa-shopping-cart sum-img\"></i>\r\n                            <h3 className=\"sum\"> Cart summary</h3>\r\n                        </div>\r\n\r\n\r\n                        <hr className=\"line\"></hr>\r\n                        <div className=\"row\">\r\n                            {cart.map((data, ind) => {\r\n                                return <CartItem\r\n                                    key={ind}\r\n                                    data={data}\r\n                                />\r\n                            })}\r\n                        </div>\r\n                        <hr className=\"line\"></hr>\r\n\r\n\r\n\r\n                        <div className=\"total-price\">\r\n                            <p>Total Amount: <h4 className=\"amount\">{totalPrice}$</h4></p>\r\n\r\n                            <div>\r\n                                <h5>Payement : COD</h5>\r\n\r\n                                <form className=\"price-form\">\r\n                                    <label ><strong> Address :</strong> </label><br></br>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Address\"\r\n                                    ></input> <br></br>\r\n                                    <label className=\"mt-2\"><strong> Phone No :</strong></label><br></br>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Phone Number\"\r\n                                    >\r\n                                    </input><br></br>\r\n                                </form>\r\n\r\n                                <button className=\"price-btn btn btn-get-started\"> Order Now </button>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Cart","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\actiontypes.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Products.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\CartItem.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Product.js",["97","98","99","100","101"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { addToCart } from '../../redux/Shopping/productaction';\r\nimport web from '../../Components/image/pizzap.png';\r\nimport mexican from '../../Components/image/mexican.png';\r\nimport chicken from '../../Components/image/chicken.png';\r\nimport cheese from '../../Components/image/cheese.png';\r\nimport vegetarian from '../../Components/image/vegetarian.png';\r\nimport { getProductDetails } from '../../redux/Shopping/productaction'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getByTitle } from '@testing-library/dom';\r\n\r\nfunction Product({ data }) {\r\n\r\n \r\n const dispatch = useDispatch();    \r\n\r\n\r\n\r\nconst getIt = (id) => {\r\n    dispatch(addToCart(data._id))\r\n}\r\n \r\n \r\n    return (\r\n        <>\r\n            <div className=\" product-group col-lg-3 col-md-4 col-12\">\r\n\r\n                <div className=\"product\">\r\n                    <img src={data.img} alt={data.img} />\r\n                    <div class=\"product-body\">\r\n                        <div class=\"product-desc\">\r\n                            <Link to={`/details/${data._id}`}>\r\n                                <h3 className=\"text-center\"> <a href=\"#\">{data.heading}</a> </h3>\r\n                            </Link>\r\n                            <p className=\"text-center mx-2\">Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc</p>\r\n                            <div class=\"favorite\">\r\n                                <p class=\"product-price\">{data.price}$</p>\r\n\r\n                                <i class=\"far fa-heart\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"product-controls\">\r\n                            <button onClick = {() => getIt(data._id)} class=\"btn btn-get-started\">Order <i class=\"fas fa-shopping-cart\"></i>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n                        \r\n}\r\n\r\nexport default Product;","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productaction.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Register\\Register.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Login\\Login.js",[],"E:\\Project1\\pizza-app\\Client\\src\\api\\index.js",[],"E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\cartreducer.js",["102","103"],"import * as actiontypes from './actiontypes';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const cartreducer = (state = {cart : []}, action) => {\r\n\r\n   // const products = useSelector(state.productreducer.products);\r\n\r\n\r\n    switch(action.type){\r\n        case actiontypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem= state.cart.find((x) => x._id === item._id ? true : false);\r\n\r\n\r\n            return {\r\n                // First we are checking that if item id present in the cart that we are updating the quantity otherwise we are taking the quantity as 1\r\n                ...state,\r\n                cart: existItem\r\n                  ? state.cart.map((item) =>\r\n                      item._id === action.payload._id\r\n                        ? { ...item, qty: item.qty + 1 }\r\n                        : item\r\n                    )\r\n                  : [...state.cart, { ...item, qty: 1 }],\r\n            };\r\n\r\n            // if(existItem){\r\n            //     return{\r\n            //         ...state,\r\n            //         cart : state.cart.map((x) => x.id === existItem.id ? item : x),\r\n            //     };\r\n            // }\r\n\r\n            // else{\r\n            //     return{\r\n            //         ...state,\r\n            //         cart : [...state.cart, item]\r\n            //     };\r\n            // }\r\n\r\n            \r\n            // const item = state.products.find((x) => x.id === action.payload.id);\r\n            // //chech that product is already present in the cart or not\r\n            // var inCart = false;\r\n            // if(state.cart!= undefined){\r\n            //  inCart = state.cart.find((item) => \r\n            //     item._id === action.payload.id ? true : false\r\n            // );}\r\n            // return {\r\n            //     // First we are checking that if item id present in the cart that we are updating the quantity otherwise we are taking the quantity as 1\r\n            //     ...state,\r\n            //     cart: inCart\r\n            //       ? state.cart.map((item) =>\r\n            //           item._id === action.payload.id\r\n            //             ? { ...item, qty: item.qty + 1 }\r\n            //             : item\r\n            //         )\r\n            //       : [...state.cart, { ...item, qty: 1 }],\r\n            // };\r\n        \r\n\r\n\r\n            case actiontypes.REMOVE:\r\n                return {\r\n                    ...state,\r\n                    cart : state.cart.filter((item) => \r\n                        item._id != action.payload.id\r\n                    )\r\n                };\r\n                \r\n                case actiontypes.ADJUST_QTY:\r\n            return {\r\n                ...state,\r\n                cart : state.cart.map((item) => \r\n                    item._id === action.payload.id ? {...item, qty : +action.payload.qty} : item\r\n                )\r\n            };\r\n\r\n            default : \r\n            return state\r\n    }\r\n}","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authreducer.js",[],"E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authaction.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":19,"column":9,"nodeType":"110","messageId":"111","endLine":19,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":25,"column":14,"nodeType":"114","messageId":"115","endLine":25,"endColumn":16},{"ruleId":"108","severity":1,"message":"116","line":22,"column":11,"nodeType":"110","messageId":"111","endLine":22,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":25,"column":5,"nodeType":"119","endLine":25,"endColumn":15,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":11},{"ruleId":"108","severity":1,"message":"122","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":15},{"ruleId":"108","severity":1,"message":"123","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":15},{"ruleId":"108","severity":1,"message":"124","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},{"ruleId":"108","severity":1,"message":"125","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":14,"column":19,"nodeType":"128","messageId":"129","endLine":14,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":22,"column":21,"nodeType":"114","messageId":"115","endLine":22,"endColumn":23},{"ruleId":"108","severity":1,"message":"130","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":27},{"ruleId":"108","severity":1,"message":"131","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":21},{"ruleId":"108","severity":1,"message":"132","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":19},{"ruleId":"108","severity":1,"message":"133","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":31,"column":62,"nodeType":"136","endLine":31,"endColumn":74},{"ruleId":"108","severity":1,"message":"131","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"112","severity":1,"message":"137","line":68,"column":34,"nodeType":"114","messageId":"115","endLine":68,"endColumn":36},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'web' is defined but never used.","'mexican' is defined but never used.","'chicken' is defined but never used.","'cheese' is defined but never used.","'vegetarian' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getProductDetails' is defined but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'getByTitle' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [location, user?.token]",{"range":"143","text":"144"},[683,693],"[location, user?.token]"]