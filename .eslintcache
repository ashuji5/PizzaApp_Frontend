[{"E:\\Project1\\pizza-app\\Client\\src\\index.js":"1","E:\\Project1\\pizza-app\\Client\\src\\App.js":"2","E:\\Project1\\pizza-app\\Client\\src\\redux\\rootReducer.js":"3","E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\Order.js":"4","E:\\Project1\\pizza-app\\Client\\src\\Components\\Navbar\\Navbar.js":"5","E:\\Project1\\pizza-app\\Client\\src\\Components\\Menu\\Menu.js":"6","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productreducer.js":"7","E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\Cart.js":"8","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\actiontypes.js":"9","E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Products.js":"10","E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\CartItem.js":"11","E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Product.js":"12","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productaction.js":"13","E:\\Project1\\pizza-app\\Client\\src\\Components\\Register\\Register.js":"14","E:\\Project1\\pizza-app\\Client\\src\\Components\\Login\\Login.js":"15","E:\\Project1\\pizza-app\\Client\\src\\api\\index.js":"16","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\cartreducer.js":"17","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authreducer.js":"18","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authaction.js":"19","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\orderaction.js":"20","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\orderReducer.js":"21","E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\OrderItme.js":"22","E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\OrderItemMenu.js":"23","E:\\Project1\\pizza-app\\Client\\src\\Components\\Dashboard\\Dash.js":"24","E:\\Project1\\pizza-app\\Client\\src\\Components\\Dashboard\\DashboardItem.js":"25","E:\\Project1\\pizza-app\\Client\\src\\Components\\Dashboard\\DashboardMenu.js":"26"},{"size":534,"mtime":1618226628693,"results":"27","hashOfConfig":"28"},{"size":1468,"mtime":1619875663249,"results":"29","hashOfConfig":"28"},{"size":390,"mtime":1619525417848,"results":"30","hashOfConfig":"28"},{"size":2188,"mtime":1619870363613,"results":"31","hashOfConfig":"28"},{"size":5690,"mtime":1619875121007,"results":"32","hashOfConfig":"28"},{"size":3502,"mtime":1615380057846,"results":"33","hashOfConfig":"28"},{"size":5542,"mtime":1619783472799,"results":"34","hashOfConfig":"28"},{"size":7909,"mtime":1619871281355,"results":"35","hashOfConfig":"28"},{"size":1108,"mtime":1619872875663,"results":"36","hashOfConfig":"28"},{"size":902,"mtime":1618316501058,"results":"37","hashOfConfig":"28"},{"size":2713,"mtime":1619769670584,"results":"38","hashOfConfig":"28"},{"size":2185,"mtime":1618660868528,"results":"39","hashOfConfig":"28"},{"size":2300,"mtime":1619782994222,"results":"40","hashOfConfig":"28"},{"size":4004,"mtime":1619179206043,"results":"41","hashOfConfig":"28"},{"size":3465,"mtime":1619179944472,"results":"42","hashOfConfig":"28"},{"size":788,"mtime":1619880240665,"results":"43","hashOfConfig":"28"},{"size":3081,"mtime":1619870849510,"results":"44","hashOfConfig":"28"},{"size":527,"mtime":1619700478327,"results":"45","hashOfConfig":"28"},{"size":625,"mtime":1619179205949,"results":"46","hashOfConfig":"28"},{"size":2123,"mtime":1619874634297,"results":"47","hashOfConfig":"28"},{"size":1604,"mtime":1619873315583,"results":"48","hashOfConfig":"28"},{"size":1102,"mtime":1619870131594,"results":"49","hashOfConfig":"28"},{"size":217,"mtime":1619791505339,"results":"50","hashOfConfig":"28"},{"size":2214,"mtime":1619880182443,"results":"51","hashOfConfig":"28"},{"size":1575,"mtime":1619878899852,"results":"52","hashOfConfig":"28"},{"size":247,"mtime":1619877654384,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1bfjsrx",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Project1\\pizza-app\\Client\\src\\index.js",[],["116","117"],"E:\\Project1\\pizza-app\\Client\\src\\App.js",["118","119"],"import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getProducts} from './redux/Shopping/productaction';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Redirect, Route}  from 'react-router-dom';\nimport Menu from './Components/Menu/Menu';\nimport Order from './Components/Order/Order';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Register/Register';\nimport Dash from './Components/Dashboard/Dash'\nimport Cart from './Components/Cart/Cart';\nimport Navbar from './Components/Navbar/Navbar';\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n\n  const productsData = useSelector(state => state.productreducer)\n  const{products, loading, error} = productsData;\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  if(loading == true){\n    return(\n      <>\n      <h2>Loading</h2>\n      </>\n    )\n  }\n\n  else if(error){\n    return(\n      <h2>{error}</h2>\n    )\n  }\n\n\n\n  else{\n  return(\n    <>\n\n  \n   \n   <BrowserRouter>\n   <div>\n   <Navbar/>\n   <Route exact path =\"/\" component={Menu}/>\n   <Route  path =\"/orders\" component = {Order\n  }/>\n   <Route path =\"/cart\" component ={Cart}/>\n   <Route path =\"/login\" component ={Login}/>\n   <Route path =\"/register\" component ={Register}/> \n   <Route path =\"/dashboard\" component = {Dash}/>  \n   <Redirect to =\"/\"/>\n   </div>\n   </BrowserRouter>\n   </>\n  )\n  }\n\n}\n\n\n\nexport default App;\n","E:\\Project1\\pizza-app\\Client\\src\\redux\\rootReducer.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\Order.js",["120","121","122"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../Order/Order.css';\r\nimport { getOrder } from '../../redux/Shopping/orderaction';\r\n\r\nimport OrderItem from '../Order/OrderItme';\r\n\r\nfunction Order() {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n\r\n    const orders = useSelector(state => state.orderReducer.orders)\r\n    const loading = useSelector(state => state.orderReducer.loading);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrder(user.result._id));\r\n    }, [dispatch]);\r\n\r\n\r\n    if (loading === true) {\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n\r\n    if(orders==undefined){\r\n        return(\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n\r\n\r\n    else {\r\n        return (\r\n            <div className=\"main-order\">\r\n                <h2>Orders</h2>\r\n                <div className=\"o-table\">\r\n                    <table class=\"styled-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"order-id\">Orders</th>\r\n                                <th>Items</th>\r\n                                <th>Phone</th>\r\n                                <th>Address</th>\r\n                                <th>Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr> */}\r\n\r\n                            {orders.map((data, ind) => {\r\n                                return <OrderItem\r\n                                    key={ind}\r\n                                    data={data}\r\n                                />\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Order","E:\\Project1\\pizza-app\\Client\\src\\Components\\Navbar\\Navbar.js",["123","124"],"import React, {useState, useEffect} from 'react';\r\nimport {LOGOUT}  from '../../redux/Shopping/actiontypes';\r\nimport '../Navbar/Navbar.css'\r\nimport web from '../image/pizza.svg'\r\nimport {Link, useLocation}  from 'react-router-dom';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n \r\n  const cart = useSelector(state => state.cartreducer.cart);\r\n  console.log(cart);\r\n\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    \r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  \r\n  },[location]);\r\n\r\n  console.log(user);\r\n\r\n  const logout = () => {\r\n    dispatch({type : LOGOUT})\r\n  }\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    let inCount = 0;\r\n    cart.forEach((item) => {\r\n      inCount += item.qty;\r\n    });\r\n\r\n    setCount(inCount);\r\n\r\n  },[count, cart])\r\n\r\n\r\n  if(user?.token){\r\n    return(\r\n\r\n      <>\r\n\r\n<section id=\"navigation\">\r\n        <nav className=\"navbar navbar-expand-lg \">\r\n          <Link style={{ textDecoration: 'none' }} to =\"/\">\r\n          <div className=\"navbar-brand\"><img src={web} alt={web}/><strong >Pizza</strong> </div> \r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"  collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mx-auto \">\r\n              <div className=\"links\">\r\n                <li className=\"nav-item active\">\r\n                  <Link style={{ textDecoration: 'none' }} to =\"/\">\r\n                  <div className=\"nav-link\">Menu <span class=\"sr-only\">(current)</span></div>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to=\"/orders\">\r\n                  <div className=\"nav-link\">Orders</div>\r\n                  </Link>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to=\"/login\">\r\n                  <div className=\"nav-link\">Login</div>\r\n                  </Link>\r\n                </li> */}\r\n                <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to=\"/\">\r\n                  <div className=\"nav-link\"  onClick = {logout} >Logout</div>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to=\"/dashboard\">\r\n                  <div className=\"nav-link\"   >Dashboard</div>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to = \"/cart\">\r\n                  <div className=\"nav-link cart\" ><i className=\"fas fa-shopping-cart\"></i><span>{count}</span></div>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            </ul>\r\n\r\n          </div>\r\n        </nav>\r\n      </section>\r\n\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  else{\r\n  \r\n  return (\r\n    <>\r\n      <section id=\"navigation\">\r\n        <nav className=\"navbar navbar-expand-lg \">\r\n          <Link style={{ textDecoration: 'none' }} to =\"/\">\r\n          <div className=\"navbar-brand\"><img src={web} alt={web}/><strong >Pizza</strong> </div> \r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"  collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mx-auto \">\r\n              <div className=\"links\">\r\n                <li className=\"nav-item active\">\r\n                  <Link style={{ textDecoration: 'none' }} to =\"/\">\r\n                  <div className=\"nav-link\">Menu <span class=\"sr-only\">(current)</span></div>\r\n                  </Link>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to=\"/orders\">\r\n                  <div className=\"nav-link\">Orders</div>\r\n                  </Link>\r\n                </li> */}\r\n                 <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to=\"/login\">\r\n                  <div className=\"nav-link\">Login</div>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to=\"/register\">\r\n                  <div className=\"nav-link\">Register</div>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link style={{ textDecoration: 'none' }} to = \"/cart\">\r\n                  <div className=\"nav-link cart\" ><i className=\"fas fa-shopping-cart\"></i><span>{count}</span></div>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            </ul>\r\n\r\n          </div>\r\n        </nav>\r\n      </section>\r\n    </>\r\n  )\r\n\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     cart : state.productreducer.cart\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps)(Navbar);\r\nexport default Navbar;","E:\\Project1\\pizza-app\\Client\\src\\Components\\Menu\\Menu.js",[],"E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productreducer.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\Cart.js",["125","126","127"],"import React, {useState} from 'react'\r\nimport './Cart.css';\r\nimport emptyCart from '../image/empty-cart.png';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport CartItem from './CartItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {createOrder} from '../../redux/Shopping/orderaction';\r\nimport { CLEAR_CART } from '../../redux/Shopping/actiontypes';\r\n\r\nfunction Cart() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    console.log(user.result._id);\r\n\r\n    const cart = useSelector(state => state.cartreducer.cart);\r\n    var totalPrice = 0;\r\n\r\n    \r\n\r\n    cart.map(item => {\r\n        totalPrice = totalPrice + parseFloat(item.price);\r\n    })\r\n\r\n\r\n\r\n    // Logic of posting an Order\r\n\r\n    const inState = {address: \"\", phone : \"\"};\r\n    const[formData, setformData] = useState(inState);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        dispatch(  createOrder(formData, totalPrice, cart, user.result._id));\r\n        dispatch({type : CLEAR_CART})\r\n\r\n        history.push('/orders')\r\n\r\n       console.log(formData);\r\n       console.log(totalPrice);\r\n       console.log(cart)\r\n        \r\n        }\r\n\r\n        const handleChange = (e) => {\r\n            setformData({...formData, [e.target.name] : e.target.value})\r\n        }\r\n\r\n       \r\n    \r\n\r\n \r\n\r\n    console.log(totalPrice);\r\n\r\n    if(user){\r\n    if (cart.length == 0) {\r\n        return (\r\n            <>\r\n                <div className=\" empty-page \">\r\n                    <div className=\" empty-cart\">\r\n                        <div className=\"empty-text\">\r\n                            <h2> Cart is empty... 🙁</h2>\r\n                            <div className=\"cart-text\">\r\n                                <p>You probably haven't added anything to the cart yet. To Order a pizza, go to the menu page</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"empty-img\">\r\n                            <img className=\"img-fluid\" src={emptyCart} alt={emptyCart} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n\r\n                <div className=\"cart-page\">\r\n                    <div className=\"container \">\r\n                        <div className=\"order-heading text-center mb-10\">\r\n                            <i class=\"fas fa-shopping-cart sum-img\"></i>\r\n                            <h3 className=\"sum\"> Cart summary</h3>\r\n                        </div>\r\n\r\n\r\n                        <hr className=\"line\"></hr>\r\n                        <div className=\"row\">\r\n                            {cart.map((data, ind) => {\r\n                                return <CartItem\r\n                                    key={ind}\r\n                                    data={data}\r\n                                />\r\n                            })}\r\n                        </div>\r\n                        <hr className=\"line\"></hr>\r\n\r\n\r\n\r\n                        <div className=\"total-price\">\r\n                            <p>Total Amount: <h4 className=\"amount\">{totalPrice}$</h4></p>\r\n\r\n                            <div>\r\n                                <h5>Payement : COD</h5>\r\n\r\n                                <form className=\"price-form\" onSubmit = {handleSubmit} >\r\n                                    <label ><strong> Address :</strong> </label><br></br>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name = \"address\"\r\n                                        placeholder=\"Address\"\r\n                                        onChange = {handleChange}\r\n                                    ></input> <br></br>\r\n                                    <label className=\"mt-2\"><strong> Phone No :</strong></label><br></br>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name = \"phone\"\r\n                                        onChange = {handleChange}\r\n                                        placeholder=\"Phone Number\"\r\n                                    >\r\n                                    </input><br></br>\r\n\r\n                                    <button className=\"price-btn btn btn-get-started\"  type = \"submit\"> Order Now </button>\r\n\r\n\r\n                                </form>\r\n\r\n                                \r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nelse{\r\n\r\n\r\n    if (cart.length == 0) {\r\n        return (\r\n            <>\r\n                <div className=\" empty-page \">\r\n                    <div className=\" empty-cart\">\r\n                        <div className=\"empty-text\">\r\n                            <h2> Cart is empty... 🙁</h2>\r\n                            <div className=\"cart-text\">\r\n                                <p>You probably haven't added anything to the cart yet. To Order a pizza, go to the menu page</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"empty-img\">\r\n                            <img className=\"img-fluid\" src={emptyCart} alt={emptyCart} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <>\r\n\r\n                <div className=\"cart-page\">\r\n                    <div className=\"container \">\r\n                        <div className=\"order-heading text-center mb-10\">\r\n                            <i class=\"fas fa-shopping-cart sum-img\"></i>\r\n                            <h3 className=\"sum\"> Cart summary</h3>\r\n                        </div>\r\n\r\n\r\n                        <hr className=\"line\"></hr>\r\n                        <div className=\"row\">\r\n                            {cart.map((data, ind) => {\r\n                                return <CartItem\r\n                                    key={ind}\r\n                                    data={data}\r\n                                />\r\n                            })}\r\n                        </div>\r\n                        <hr className=\"line\"></hr>\r\n\r\n\r\n\r\n                        <div className=\"total-price\">\r\n                            <p>Total Amount: <h4 className=\"amount\">{totalPrice}$</h4></p>\r\n\r\n                            <div>\r\n                                <h5>Payement : COD</h5>\r\n\r\n                                <form className=\"price-form\">\r\n                                    <label ><strong> Address :</strong> </label><br></br>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Address\"\r\n                                    ></input> <br></br>\r\n                                    <label className=\"mt-2\"><strong> Phone No :</strong></label><br></br>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Phone Number\"\r\n                                    >\r\n                                    </input><br></br>\r\n                                </form>\r\n\r\n                                <Link style = {{textDecoration : 'none'}} to=\"/login\" >\r\n                                <button className=\" btn btn-get-started log-cont\"> Login To Continue </button>\r\n                                </Link>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n}\r\n\r\nexport default Cart","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\actiontypes.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Products.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Cart\\CartItem.js",["128"],"import React, {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeFromCart, adjstQty } from '../../redux/Shopping/productaction';\r\n\r\nconst CartItem = (data) => {\r\n\r\n    //let p = data.data.price;\r\n\r\n    const [price, setPrice] = useState(data.data.price);\r\n    const t = data.data.price;\r\n\r\n    const increment = () => {\r\n        var value = parseInt(document.getElementById('demo').value);\r\n        const key = data.data.qty;\r\n        value = key;\r\n        value++;\r\n        document.getElementById('demo').value = value;\r\n        dispatch(adjstQty(data.data._id, value));\r\n        console.log(value);\r\n        setPrice(price*value);\r\n       // console.log(p);\r\n    }\r\n\r\n    const decrement = () => {\r\n        var value = parseInt(document.getElementById('demo').value);\r\n        const key = data.data.qty;\r\n        value = key;\r\n        if (value > 1) {\r\n            value--;\r\n            document.getElementById('demo').value = value;\r\n            dispatch(adjstQty(data.data._id, value));\r\n           // p = value*p;\r\n           setPrice( price*value);\r\n        }\r\n        console.log(value);\r\n    }\r\n\r\n    // console.log(data);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12 mb-3 shopping-cart\">\r\n\r\n\r\n                {/* start */}\r\n\r\n\r\n\r\n\r\n                <div class=\"item\">\r\n\r\n                    <div class=\"image\">\r\n                        <img src={data.data.img} alt={data.data.img} />\r\n                    </div>\r\n\r\n                    <div class=\"description\">\r\n                        <h5>{data.data.heading}</h5>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"quantity\">\r\n                        <input className=\"plus\" type=\"button\"\r\n                            onClick={increment}\r\n                            value= \"+\"\r\n                        />\r\n                        <input\r\n                            id=\"demo\"\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={data.data.qty}\r\n                        />\r\n\r\n                        <input className=\"minus\" type=\"button\"\r\n                            onClick={decrement}\r\n                            value=\"-\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\" ><p>{price}$</p></div>\r\n\r\n                    <i class=\"fas fa-trash \" onClick={() => dispatch(removeFromCart(data.data._id))} ></i>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/* end */}\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartItem;","E:\\Project1\\pizza-app\\Client\\src\\Components\\Product\\Product.js",["129","130","131","132","133"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { addToCart } from '../../redux/Shopping/productaction';\r\nimport web from '../../Components/image/pizzap.png';\r\nimport mexican from '../../Components/image/mexican.png';\r\nimport chicken from '../../Components/image/chicken.png';\r\nimport cheese from '../../Components/image/cheese.png';\r\nimport vegetarian from '../../Components/image/vegetarian.png';\r\nimport { getProductDetails } from '../../redux/Shopping/productaction'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getByTitle } from '@testing-library/dom';\r\n\r\nfunction Product({ data }) {\r\n\r\n \r\n const dispatch = useDispatch();    \r\n\r\n\r\n\r\nconst getIt = (id) => {\r\n    dispatch(addToCart(data._id))\r\n}\r\n \r\n \r\n    return (\r\n        <>\r\n            <div className=\" product-group col-lg-3 col-md-4 col-12\">\r\n\r\n                <div className=\"product\">\r\n                    <img src={data.img} alt={data.img} />\r\n                    <div class=\"product-body\">\r\n                        <div class=\"product-desc\">\r\n                            <Link to={`/details/${data._id}`}>\r\n                                <h3 className=\"text-center\"> <a href=\"#\">{data.heading}</a> </h3>\r\n                            </Link>\r\n                            <p className=\"text-center mx-2\">Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc</p>\r\n                            <div class=\"favorite\">\r\n                                <p class=\"product-price\">{data.price}$</p>\r\n\r\n                                <i class=\"far fa-heart\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"product-controls\">\r\n                            <button onClick = {() => getIt(data._id)} class=\"btn btn-get-started\">Order <i class=\"fas fa-shopping-cart\"></i>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n                        \r\n}\r\n\r\nexport default Product;","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\productaction.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Register\\Register.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Login\\Login.js",[],"E:\\Project1\\pizza-app\\Client\\src\\api\\index.js",[],"E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\cartreducer.js",["134","135"],"import * as actiontypes from './actiontypes';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const cartreducer = (state = {cart : []}, action) => {\r\n\r\n   // const products = useSelector(state.productreducer.products);\r\n\r\n\r\n    switch(action.type){\r\n        case actiontypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem= state.cart.find((x) => x._id === item._id ? true : false);\r\n\r\n\r\n            return {\r\n                // First we are checking that if item id present in the cart that we are updating the quantity otherwise we are taking the quantity as 1\r\n                ...state,\r\n                cart: existItem\r\n                  ? state.cart.map((item) =>\r\n                      item._id === action.payload._id\r\n                        ? { ...item, qty: item.qty + 1 }\r\n                        : item\r\n                    )\r\n                  : [...state.cart, { ...item, qty: 1 }],\r\n            };\r\n\r\n            // if(existItem){\r\n            //     return{\r\n            //         ...state,\r\n            //         cart : state.cart.map((x) => x.id === existItem.id ? item : x),\r\n            //     };\r\n            // }\r\n\r\n            // else{\r\n            //     return{\r\n            //         ...state,\r\n            //         cart : [...state.cart, item]\r\n            //     };\r\n            // }\r\n\r\n            \r\n            // const item = state.products.find((x) => x.id === action.payload.id);\r\n            // //chech that product is already present in the cart or not\r\n            // var inCart = false;\r\n            // if(state.cart!= undefined){\r\n            //  inCart = state.cart.find((item) => \r\n            //     item._id === action.payload.id ? true : false\r\n            // );}\r\n            // return {\r\n            //     // First we are checking that if item id present in the cart that we are updating the quantity otherwise we are taking the quantity as 1\r\n            //     ...state,\r\n            //     cart: inCart\r\n            //       ? state.cart.map((item) =>\r\n            //           item._id === action.payload.id\r\n            //             ? { ...item, qty: item.qty + 1 }\r\n            //             : item\r\n            //         )\r\n            //       : [...state.cart, { ...item, qty: 1 }],\r\n            // };\r\n        \r\n\r\n\r\n            case actiontypes.REMOVE:\r\n                return {\r\n                    ...state,\r\n                    cart : state.cart.filter((item) => \r\n                        item._id != action.payload.id\r\n                    )\r\n                };\r\n                \r\n                case actiontypes.ADJUST_QTY:\r\n            return {\r\n                ...state,\r\n                cart : state.cart.map((item) => \r\n                    item._id === action.payload.id ? {...item, qty : +action.payload.qty} : item\r\n                )\r\n            };\r\n\r\n            case actiontypes.CLEAR_CART :\r\n                return{\r\n                    ...state,\r\n                    cart : []\r\n                };\r\n\r\n            default : \r\n            return state\r\n    }\r\n}","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authreducer.js",[],"E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\authaction.js",[],"E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\orderaction.js",["136","137","138","139"],"import {POST_ORDER, GET_ORDER_FAIL, GET_ORDER_REQUEST, GET_ORDER_SUCCESS,GET_ADMIN_ORDER_FAIL,GET_ADMIN_ORDER_REQUEST, GET_ADMIN_ORDER_SUCCESS} from './actiontypes';\r\nimport {postOrder, gettingOrder, getAdminDash} from '../../api';\r\n\r\nexport const createOrder = (FormData, price, cart, user) => async(dispatch) =>{\r\n\r\n    try {\r\n\r\n        console.log(\"Yep entered\")\r\n        //const mprice = {\"price\" : price};\r\n        const tprice = JSON.parse(JSON.stringify({\"price\" : price}));\r\n       // console.log( tprice);\r\n\r\n       const data = {\"FormData\" : FormData,\r\n    \r\n       \"price\" : tprice,\r\n       \"cart\" : cart,\r\n       \"user\" : user\r\n    }\r\n\r\n    console.log(data);\r\n\r\n         const {order} = await postOrder(data);\r\n        // console.log(order);\r\n\r\n         dispatch({type : POST_ORDER, payload : order});\r\n        \r\n    } catch (error) {\r\n\r\n        console.log(error);\r\n        \r\n    }\r\n\r\n};\r\n\r\nexport const getOrder = (id) => async(dispatch) => {\r\n\r\n    const _id = JSON.parse(JSON.stringify({\"id\" : id}));\r\n\r\n    //console.log( _id);\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: GET_ORDER_REQUEST\r\n        });\r\n    \r\n        const {data} = await gettingOrder(_id);\r\n\r\n        \r\n\r\n        dispatch({\r\n            type : GET_ORDER_SUCCESS,\r\n            payload : data\r\n        });\r\n        \r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type : GET_ORDER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n\r\n    }\r\n   \r\n};\r\n\r\nexport const getAdminOrder = () => async(dispatch) => {\r\n\r\n    \r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: GET_ADMIN_ORDER_REQUEST\r\n        });\r\n    \r\n        const {data} = await getAdminDash();\r\n\r\n        \r\n\r\n        dispatch({\r\n            type : GET_ADMIN_ORDER_SUCCESS,\r\n            payload : data\r\n        });\r\n        \r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type : GET_ADMIN_ORDER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n\r\n    }\r\n   \r\n};","E:\\Project1\\pizza-app\\Client\\src\\redux\\Shopping\\orderReducer.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\OrderItme.js",["140","141","142"],"import OrderMenu from '../Order/OrderItemMenu';\r\nimport moment from 'moment';\r\nconst OrderItem = (data) => {\r\n\r\n    const test = data.data.items;\r\n    let it;\r\n    test.map((data, ind) => {\r\n        it = data.heading\r\n    })\r\n\r\n    const time = data.data.createdAt;\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <tr>\r\n                <td>{data.data._id}</td>\r\n                {/* <td>{data.data.items}</td> */}\r\n                <td> {\r\n\r\n                    \r\n                        data.data.items.map((data, ind) => {\r\n                            return <OrderMenu\r\n                                key={ind}\r\n                                data={data}\r\n                            />\r\n                        })\r\n                    \r\n\r\n                }</td>\r\n                <td>{data.data.phone}</td>\r\n                <td>{data.data.address}</td>\r\n                <td>{moment(data.data.createdAt).format('hh mm A')}   on   {moment(data.data.createdAt).format('MMMM Do YYYY')}</td>\r\n                {/* <td>{time}</td> */}\r\n            </tr>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderItem;","E:\\Project1\\pizza-app\\Client\\src\\Components\\Order\\OrderItemMenu.js",[],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Dashboard\\Dash.js",["143"],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Dashboard\\DashboardItem.js",["144"],"E:\\Project1\\pizza-app\\Client\\src\\Components\\Dashboard\\DashboardMenu.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":19,"column":9,"nodeType":"151","messageId":"152","endLine":19,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":25,"column":14,"nodeType":"155","messageId":"156","endLine":25,"endColumn":16},{"ruleId":"149","severity":1,"message":"157","line":13,"column":18,"nodeType":"151","messageId":"152","endLine":13,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":22,"column":8,"nodeType":"160","endLine":22,"endColumn":18,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"154","line":31,"column":14,"nodeType":"155","messageId":"156","endLine":31,"endColumn":16},{"ruleId":"149","severity":1,"message":"162","line":21,"column":11,"nodeType":"151","messageId":"152","endLine":21,"endColumn":16},{"ruleId":"158","severity":1,"message":"163","line":26,"column":5,"nodeType":"160","endLine":26,"endColumn":15,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":24,"column":19,"nodeType":"167","messageId":"168","endLine":24,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":61,"column":21,"nodeType":"155","messageId":"156","endLine":61,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":155,"column":21,"nodeType":"155","messageId":"156","endLine":155,"endColumn":23},{"ruleId":"149","severity":1,"message":"169","line":10,"column":11,"nodeType":"151","messageId":"152","endLine":10,"endColumn":12},{"ruleId":"149","severity":1,"message":"170","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":27},{"ruleId":"149","severity":1,"message":"171","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"149","severity":1,"message":"172","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":19},{"ruleId":"149","severity":1,"message":"173","line":8,"column":10,"nodeType":"151","messageId":"152","endLine":8,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":31,"column":62,"nodeType":"176","endLine":31,"endColumn":74},{"ruleId":"149","severity":1,"message":"171","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":21},{"ruleId":"153","severity":1,"message":"177","line":68,"column":34,"nodeType":"155","messageId":"156","endLine":68,"endColumn":36},{"ruleId":"149","severity":1,"message":"178","line":1,"column":74,"nodeType":"151","messageId":"152","endLine":1,"endColumn":94},{"ruleId":"149","severity":1,"message":"179","line":1,"column":95,"nodeType":"151","messageId":"152","endLine":1,"endColumn":118},{"ruleId":"149","severity":1,"message":"180","line":1,"column":120,"nodeType":"151","messageId":"152","endLine":1,"endColumn":143},{"ruleId":"149","severity":1,"message":"181","line":2,"column":34,"nodeType":"151","messageId":"152","endLine":2,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":7,"column":26,"nodeType":"167","messageId":"168","endLine":7,"endColumn":28},{"ruleId":"149","severity":1,"message":"182","line":8,"column":9,"nodeType":"151","messageId":"152","endLine":8,"endColumn":11},{"ruleId":"149","severity":1,"message":"183","line":11,"column":11,"nodeType":"151","messageId":"152","endLine":11,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":29,"column":19,"nodeType":"155","messageId":"156","endLine":29,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":42,"column":35,"nodeType":"155","messageId":"156","endLine":42,"endColumn":37},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.result._id'. Either include it or remove the dependency array.","ArrayExpression",["186"],"'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.",["187"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'t' is assigned a value but never used.","'getProductDetails' is defined but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'getByTitle' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'GET_ADMIN_ORDER_FAIL' is defined but never used.","'GET_ADMIN_ORDER_REQUEST' is defined but never used.","'GET_ADMIN_ORDER_SUCCESS' is defined but never used.","'getAdminDash' is defined but never used.","'it' is assigned a value but never used.","'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [dispatch, user.result._id]",{"range":"192","text":"193"},"Update the dependencies array to be: [location, user?.token]",{"range":"194","text":"195"},[620,630],"[dispatch, user.result._id]",[691,701],"[location, user?.token]"]